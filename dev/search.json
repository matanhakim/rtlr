[{"path":"https://matanhakim.github.io/rtlr/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 rtlr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://matanhakim.github.io/rtlr/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matan Hakim. Author, maintainer, copyright holder.","code":""},{"path":"https://matanhakim.github.io/rtlr/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hakim M (2023). rtlr: Print Right--Left Languages Correctly. https://github.com/matanhakim/rtlr, https://matanhakim.github.io/rtlr/.","code":"@Manual{,   title = {rtlr: Print Right-to-Left Languages Correctly},   author = {Matan Hakim},   year = {2023},   note = {https://github.com/matanhakim/rtlr, https://matanhakim.github.io/rtlr/}, }"},{"path":"https://matanhakim.github.io/rtlr/dev/index.html","id":"rtlr-","dir":"","previous_headings":"","what":"Print Right-to-Left Languages Correctly","title":"Print Right-to-Left Languages Correctly","text":"goal rtlr help print correctly right--left text console plots. motivated Stack Overflow question 2018. now, main function str_rtl(), wraps string RTL-embedding Unicode characters.","code":""},{"path":"https://matanhakim.github.io/rtlr/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Print Right-to-Left Languages Correctly","text":"can install rtlr CRAN : Alternatively, can install development version rtlr GitHub :","code":"install.packages(\"rtlr) # install.packages(\"devtools\") devtools::install_github(\"matanhakim/rtlr\")"},{"path":"https://matanhakim.github.io/rtlr/dev/index.html","id":"basic-example","dir":"","previous_headings":"","what":"Basic Example","title":"Print Right-to-Left Languages Correctly","text":"basic example fixing RTL issue writing Hebrew. Hebrew written right--left, punctuation marks (“,” “.”) come left side, .e. end, sentance. Notice dot ends left side, .","code":"library(rtlr) x <- \"הנקודה צריכה להיות בסוף המשפט.\" # `x` says in Hebrew: # \"the dot should come at the end of the sentance.\"  cat(x) #> הנקודה צריכה להיות בסוף המשפט. cat(str_rtl(x)) #> ‫הנקודה צריכה להיות בסוף המשפט."},{"path":"https://matanhakim.github.io/rtlr/dev/index.html","id":"example-in-a-plot","dir":"","previous_headings":"","what":"Example in a Plot","title":"Print Right-to-Left Languages Correctly","text":"can also use plots, example:  Notice exclamation mark right-hand side, left, Arabic another right--left language. use str_rtl() solve , like :  Now exclamation mark left-hand side, like . Additionally, sometimes wish break lines within plot. easiest way pasting \\n, results yet problem location non-RTL characters. Notice parentheses top row x labs() correctly placed left side, parentheses bottom row wrongly placed right side.  can easily solved str_rtl() multiline = TRUE:  common use case caption plot, sometimes write lot text regarding source data copyrights. don’t notice, can easily overflow:  two problems : caption gets cut middle; dot end sentence placed wrongly right side, left. can easily solved using multiline = TRUE argument:  Notice lines split overflow, final dot placed left side, .","code":"library(ggplot2) #> Warning: package 'ggplot2' was built under R version 4.2.2 theme_update(text = element_text(size = 20)) p <- ggplot(mtcars, aes(factor(cyl))) +   geom_bar() p +   labs(     x = \"اسطوانات!\"     # `x` in `labs()` says \"cylinders!\" in Arabic.   ) p +   labs(     x = str_rtl(\"اسطوانات!\")     # `x` in `labs()` says in Arabic:     # \"cylinders!\"   ) p +   labs(     x = paste0(       \"اسطوانات! (عدد المكابس)\",       \"\\n\",       \"عام (2023)\"     )     # `x` in `labs()` says in Arabic:     # \"cylinders! (The number of pistons)\"     # \"Year (2023)\"   ) p +   labs(     x = str_rtl(       \"اسطوانات! (عدد المكابس)\",       \"عام (2023)\",       multiline = TRUE     )     # `x` in `labs()` says in Arabic:     # \"cylinders! (The number of pistons)\"     # \"Year (2023)\"   ) p +   labs(     x = str_rtl(       \"اسطوانات! (عدد المكابس)\",       \"عام (2023)\",       multiline = TRUE     ),     # `x` in `labs()` says in Arabic:     # \"cylinders! (The number of pistons)\"     # \"Year (2023)\"     caption = \"מקור המידע: טבלה מובנית של נתוני מכוניות. עיבוד: מתן חכים. יש להקפיד על הצגת טקסט מימין לשמאל.\"     # `caption` says in Hebrew:     # \"Source of data: a built-in data frame of car data. Analysis: Matan Hakim.\"     # \"You should insist on showing your text right-to-left.\"   ) p +   labs(     x = str_rtl(       \"اسطوانات! (عدد المكابس)\",       \"عام (2023)\",       multiline = TRUE     ),     # `x` in `labs()` says in Arabic:     # \"cylinders! (The number of pistons)\"     # \"Year (2023)\"     caption = str_rtl(       \"מקור המידע: טבלה מובנית של נתוני מכוניות. עיבוד: מתן חכים.\",       \"יש להקפיד על הצגת טקסט מימין לשמאל.\",       multiline = TRUE     )     # `caption` says in Hebrew:     # \"Source of data: a built-in data frame of car data. Analysis: Matan Hakim.\"     # \"You should insist on showing your text right-to-left.\"   )"},{"path":"https://matanhakim.github.io/rtlr/dev/reference/rtlr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rtlr: Print Right-to-Left Languages Correctly — rtlr-package","title":"rtlr: Print Right-to-Left Languages Correctly — rtlr-package","text":"Convenience functions make common tasks right--left string printing easier, convenient need remember long Unicode characters. Specifically helpful right--left languages Arabic, Persian Hebrew.","code":""},{"path":[]},{"path":"https://matanhakim.github.io/rtlr/dev/reference/rtlr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rtlr: Print Right-to-Left Languages Correctly — rtlr-package","text":"Maintainer: Matan Hakim matanhakim@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://matanhakim.github.io/rtlr/dev/reference/str_rtl.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap a string with RTL-embedding Unicode characters — str_rtl","title":"Wrap a string with RTL-embedding Unicode characters — str_rtl","text":"Wrap string RTL-embedding Unicode characters","code":""},{"path":"https://matanhakim.github.io/rtlr/dev/reference/str_rtl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap a string with RTL-embedding Unicode characters — str_rtl","text":"","code":"str_rtl(..., multiline = FALSE)"},{"path":"https://matanhakim.github.io/rtlr/dev/reference/str_rtl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap a string with RTL-embedding Unicode characters — str_rtl","text":"... One character vectors, ideally length 1. multiline Whether split input strings separate lines. Defaults FALSE.","code":""},{"path":"https://matanhakim.github.io/rtlr/dev/reference/str_rtl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap a string with RTL-embedding Unicode characters — str_rtl","text":"character vector.","code":""},{"path":"https://matanhakim.github.io/rtlr/dev/reference/str_rtl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap a string with RTL-embedding Unicode characters — str_rtl","text":"","code":"# Notice how the `.` prints to the right, while in RTL it should print to the left cat(\"a.\") #> a.  # `str_rtl()` fixes this: str_rtl(\"a.\") |> cat() #> ‫a.  str_rtl(\"a.\", \"b.\", multiline = TRUE) |> cat() #> ‫a. #> ‫b."},{"path":"https://matanhakim.github.io/rtlr/dev/news/index.html","id":"rtlr-0109000","dir":"Changelog","previous_headings":"","what":"rtlr 0.1.0.9000","title":"rtlr 0.1.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
